// –î–∞–Ω—ñ —Ç–æ–≤–∞—Ä—ñ–≤
const products = [
    { id: 1, name: "–°–º–∞—Ä—Ç—Ñ–æ–Ω Xiaomi", price: 8999, category: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞" },
    { id: 2, name: "–ù–æ—É—Ç–±—É–∫ Asus", price: 21999, category: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞" },
    { id: 3, name: "–§—É—Ç–±–æ–ª–∫–∞ —á–æ–ª–æ–≤—ñ—á–∞", price: 499, category: "–û–¥—è–≥" },
    { id: 4, name: "–î–∂–∏–Ω—Å–∏ –∫–ª–∞—Å–∏—á–Ω—ñ", price: 899, category: "–û–¥—è–≥" },
    { id: 5, name: "–†–æ–º–∞–Ω '–•—ñ–±–∞ —Ä–µ–≤—É—Ç—å –≤–æ–ª–∏'", price: 199, category: "–ö–Ω–∏–≥–∏" },
    { id: 6, name: "–ù–∞—Å—Ç—ñ–ª—å–Ω–∞ –ª–∞–º–ø–∞ LED", price: 459, category: "–î–ª—è –¥–æ–º—É" },
    { id: 7, name: "–ë–µ–∑–¥—Ä–æ—Ç–æ–≤—ñ –Ω–∞–≤—É—à–Ω–∏–∫–∏", price: 1299, category: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞" },
    { id: 8, name: "–ö–∞–≤–∞ –≤ –∑–µ—Ä–Ω–∞—Ö", price: 89, category: "–î–ª—è –¥–æ–º—É" },
    { id: 9, name: "–ú–æ–Ω—ñ—Ç–æ—Ä 24\"", price: 5499, category: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞" },
    { id: 10, name: "–°–≤–µ—Ç—Ä –∑ –≤–æ–≤–Ω–∏", price: 1299, category: "–û–¥—è–≥" },
    { id: 11, name: "–î–µ—Ç–µ–∫—Ç–∏–≤–∏ –ê–≥–∞—Ç–∏ –ö—Ä—ñ—Å—Ç—ñ", price: 299, category: "–ö–Ω–∏–≥–∏" },
    { id: 12, name: "–ö–∞–≤–æ–≤–∞—Ä–∫–∞", price: 1899, category: "–î–ª—è –¥–æ–º—É" }
];

// –ö–æ—à–∏–∫
let cart = [];

// DOM –µ–ª–µ–º–µ–Ω—Ç–∏
const pages = document.querySelectorAll('.page');
const navButtons = document.querySelectorAll('.nav-btn');
const categoryButtons = document.querySelectorAll('.category-btn');
const productsContainer = document.getElementById('products-list');
const loadingIndicator = document.getElementById('loading-indicator');
const searchInput = document.getElementById('search-input');
const cartIcon = document.getElementById('cart-icon');
const cartSidebar = document.getElementById('cart-sidebar');
const cartOverlay = document.getElementById('cart-overlay');
const closeCartButton = document.getElementById('close-cart');
const cartItemsContainer = document.getElementById('cart-items');
const totalPriceElement = document.getElementById('total-price');
const cartCountElement = document.getElementById('cart-count');
const exploreButton = document.getElementById('explore-btn');
const categoryPreviews = document.querySelectorAll('.category-preview');

// –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤
function renderProducts(category = 'all', searchQuery = '') {
    // –ü–æ–∫–∞–∑–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    loadingIndicator.style.display = 'block';
    productsContainer.innerHTML = '';
    
    // –Ü–º—ñ—Ç–∞—Ü—ñ—è –∑–∞—Ç—Ä–∏–º–∫–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
    setTimeout(() => {
        let filteredProducts = category === 'all' 
            ? products 
            : products.filter(product => product.category === category);
        
        // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∑–∞ –ø–æ—à—É–∫–æ–≤–∏–º –∑–∞–ø–∏—Ç–æ–º
        if (searchQuery) {
            const query = searchQuery.toLowerCase();
            filteredProducts = filteredProducts.filter(product => 
                product.name.toLowerCase().includes(query)
            );
        }
        
        // –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–æ–≤–∞—Ä—ñ–≤
        productsContainer.innerHTML = '';
        
        if (filteredProducts.length === 0) {
            productsContainer.innerHTML = `
                <div class="no-products">
                    <p>–¢–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>
                </div>
            `;
        } else {
            filteredProducts.forEach(product => {
                const productElement = document.createElement('div');
                productElement.className = 'product-card';
                productElement.innerHTML = `
                    <div class="product-image">${getProductIcon(product.category)}</div>
                    <div class="product-info">
                        <div class="product-title">${product.name}</div>
                        <div class="product-price">${product.price} –≥—Ä–Ω</div>
                        <button class="add-to-cart" data-id="${product.id}">–î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫</button>
                    </div>
                `;
                productsContainer.appendChild(productElement);
            });
        }
        
        // –î–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≤ –∫–æ—à–∏–∫
        document.querySelectorAll('.add-to-cart').forEach(button => {
            button.addEventListener('click', function() {
                const productId = parseInt(this.getAttribute('data-id'));
                addToCart(productId);
            });
        });
        
        // –ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        loadingIndicator.style.display = 'none';
    }, 500);
}

// –û—Ç—Ä–∏–º–∞—Ç–∏ —ñ–∫–æ–Ω–∫—É –¥–ª—è —Ç–æ–≤–∞—Ä—É –∑–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—î—é
function getProductIcon(category) {
    const icons = {
        '–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞': 'üì±',
        '–û–¥—è–≥': 'üëï',
        '–ö–Ω–∏–≥–∏': 'üìö',
        '–î–ª—è –¥–æ–º—É': 'üè†'
    };
    return icons[category] || 'üì¶';
}

// –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä –¥–æ –∫–æ—à–∏–∫–∞
function addToCart(productId) {
    const product = products.find(p => p.id === productId);
    if (product) {
        const existingItem = cart.find(item => item.id === productId);
        
        if (existingItem) {
            existingItem.quantity += 1;
        } else {
            cart.push({
                id: product.id,
                name: product.name,
                price: product.price,
                quantity: 1
            });
        }
        
        updateCartUI();
        showNotification(`–¢–æ–≤–∞—Ä "${product.name}" –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞!`);
    }
}

// –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä –∑ –∫–æ—à–∏–∫–∞
function removeFromCart(productId) {
    cart = cart.filter(item => item.id !== productId);
    updateCartUI();
}

// –û–Ω–æ–≤–∏—Ç–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ—à–∏–∫–∞
function updateCartUI() {
    // –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É
    cartItemsContainer.innerHTML = '';
    
    let total = 0;
    
    // –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏ –¥–æ –∫–æ—à–∏–∫–∞
    cart.forEach(item => {
        const itemTotal = item.price * item.quantity;
        total += itemTotal;
        
        const cartItemElement = document.createElement('div');
        cartItemElement.className = 'cart-item';
        cartItemElement.innerHTML = `
            <div class="cart-item-info">
                <div class="cart-item-name">${item.name}</div>
                <div class="cart-item-price">${item.price} –≥—Ä–Ω √ó ${item.quantity}</div>
            </div>
            <div class="cart-item-actions">
                <span class="cart-item-quantity">${item.quantity}</span>
                <button class="cart-item-remove" data-id="${item.id}">üóëÔ∏è</button>
            </div>
        `;
        cartItemsContainer.appendChild(cartItemElement);
    });
    
    // –û–Ω–æ–≤–∏—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É
    totalPriceElement.textContent = `${total} –≥—Ä–Ω`;
    
    // –û–Ω–æ–≤–∏—Ç–∏ –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ç–æ–≤–∞—Ä—ñ–≤ —É –∫–æ—à–∏–∫—É
    const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
    cartCountElement.textContent = totalItems;
    
    // –î–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    document.querySelectorAll('.cart-item-remove').forEach(button => {
        button.addEventListener('click', function() {
            const productId = parseInt(this.getAttribute('data-id'));
            removeFromCart(productId);
        });
    });
}

// –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
function showNotification(message) {
    // –°—Ç–≤–æ—Ä–∏—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;
    notification.style.cssText = `
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background-color: var(--primary-color);
        color: white;
        padding: 12px 20px;
        border-radius: 30px;
        z-index: 1000;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        animation: slideIn 0.3s ease;
    `;
    
    // –î–æ–¥–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
    document.body.appendChild(notification);
    
    // –í–∏–¥–∞–ª–∏—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease';
        setTimeout(() => {
            document.body.removeChild(notification);
        }, 300);
    }, 3000);
}

// –í—ñ–¥–∫—Ä–∏—Ç–∏ –∫–æ—à–∏–∫
function openCart() {
    cartSidebar.classList.add('active');
    cartOverlay.style.display = 'block';
    document.body.style.overflow = 'hidden';
}

// –ó–∞–∫—Ä–∏—Ç–∏ –∫–æ—à–∏–∫
function closeCart() {
    cartSidebar.classList.remove('active');
    cartOverlay.style.display = 'none';
    document.body.style.overflow = 'auto';
}

// –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–æ–∫
function switchPage(pageId) {
    // –û–Ω–æ–≤–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω—É –∫–Ω–æ–ø–∫—É –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    navButtons.forEach(btn => {
        btn.classList.remove('active');
        if (btn.getAttribute('data-page') === pageId) {
            btn.classList.add('active');
        }
    });
    
    // –ü–µ—Ä–µ–º–∏–∫–∞—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    pages.forEach(page => {
        page.classList.remove('active');
        if (page.id === pageId) {
            page.classList.add('active');
        }
    });
    
    // –Ø–∫—â–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥, –ø–µ—Ä–µ–º–∞–ª—å–æ–≤—É—î–º–æ —Ç–æ–≤–∞—Ä–∏
    if (pageId === 'catalog-page') {
        renderProducts();
    }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É
function initApp() {
    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó
    navButtons.forEach(button => {
        button.addEventListener('click', function() {
            const pageId = this.getAttribute('data-page');
            switchPage(pageId);
        });
    });
    
    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    categoryButtons.forEach(button => {
        button.addEventListener('click', function() {
            categoryButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
            const category = this.getAttribute('data-category');
            renderProducts(category, searchInput.value);
        });
    });
    
    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –¥–ª—è –ø–æ—à—É–∫—É
    searchInput.addEventListener('input', function() {
        const activeCategory = document.querySelector('.category-btn.active');
        const category = activeCategory ? activeCategory.getAttribute('data-category') : 'all';
        renderProducts(category, this.value);
    });
    
    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–ª—è –∫–æ—à–∏–∫–∞
    cartIcon.addEventListener('click', openCart);
    closeCartButton.addEventListener('click', closeCart);
    cartOverlay.addEventListener('click', closeCart);
    
    // –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏ –¥–æ –ø–æ–∫—É–ø–æ–∫"
    if (exploreButton) {
        exploreButton.addEventListener('click', () => {
            switchPage('catalog-page');
        });
    }
    
    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –ø—Ä–µ–≤'—é –∫–∞—Ç–µ–≥–æ—Ä—ñ–π
    categoryPreviews.forEach(preview => {
        preview.addEventListener('click', () => {
            const category = preview.getAttribute('data-category');
            switchPage('catalog-page');
            
            // –ê–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
            setTimeout(() => {
                categoryButtons.forEach(btn => {
                    btn.classList.remove('active');
                    if (btn.getAttribute('data-category') === category) {
                        btn.classList.add('active');
                    }
                });
                renderProducts(category);
            }, 100);
        });
    });
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–æ—à–∏–∫–∞
    updateCartUI();
}




// –ó–∞–ø—É—Å–∫ –¥–æ–¥–∞—Ç–∫—É –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è DOM
document.addEventListener('DOMContentLoaded', initApp);